{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANAL\\\\chat-app\\\\frontend\\\\src\\\\components\\\\MessageInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageInput = ({\n  onSendMessage,\n  onTyping,\n  disabled = false\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const inputRef = useRef(null);\n\n  // Focus input when component mounts\n  useEffect(() => {\n    if (inputRef.current && !disabled) {\n      inputRef.current.focus();\n    }\n  }, [disabled]);\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!message.trim() || disabled || isSending) {\n      return;\n    }\n    setIsSending(true);\n    try {\n      await onSendMessage(message.trim());\n      setMessage(''); // Clear input after sending\n\n      // Refocus input\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  // Handle input changes\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setMessage(value);\n\n    // Trigger typing indicator\n    if (value.trim() && !disabled) {\n      onTyping();\n    }\n  };\n\n  // Handle key press\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"message-input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"text\",\n          value: message,\n          onChange: handleInputChange,\n          onKeyPress: handleKeyPress,\n          placeholder: disabled ? \"Connecting...\" : \"Type your message...\",\n          disabled: disabled || isSending,\n          className: `message-input ${disabled ? 'disabled' : ''}`,\n          maxLength: 500,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), message.length > 400 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character-count\",\n          children: [message.length, \"/500\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !message.trim() || disabled || isSending,\n        className: `send-button ${!message.trim() || disabled || isSending ? 'disabled' : ''}`,\n        title: \"Send message (Enter)\",\n        children: isSending ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          children: \"\\u27F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u27A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), message.length > 450 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-warning\",\n      children: \"Message is getting long. Consider breaking it into multiple messages.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageInput, \"xYVlU2vG8hcCyK0r+h0LJIECOZ8=\");\n_c = MessageInput;\nexport default MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","MessageInput","onSendMessage","onTyping","disabled","_s","message","setMessage","isSending","setIsSending","inputRef","current","focus","handleSubmit","e","preventDefault","trim","error","console","handleInputChange","value","target","handleKeyPress","key","shiftKey","className","children","onSubmit","ref","type","onChange","onKeyPress","placeholder","maxLength","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","length","title","_c","$RefreshReg$"],"sources":["C:/Users/SANAL/chat-app/frontend/src/components/MessageInput.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst MessageInput = ({ onSendMessage, onTyping, disabled = false }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [isSending, setIsSending] = useState(false);\r\n  const inputRef = useRef(null);\r\n\r\n  // Focus input when component mounts\r\n  useEffect(() => {\r\n    if (inputRef.current && !disabled) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [disabled]);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!message.trim() || disabled || isSending) {\r\n      return;\r\n    }\r\n\r\n    setIsSending(true);\r\n    \r\n    try {\r\n      await onSendMessage(message.trim());\r\n      setMessage(''); // Clear input after sending\r\n      \r\n      // Refocus input\r\n      if (inputRef.current) {\r\n        inputRef.current.focus();\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to send message:', error);\r\n    } finally {\r\n      setIsSending(false);\r\n    }\r\n  };\r\n\r\n  // Handle input changes\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setMessage(value);\r\n    \r\n    // Trigger typing indicator\r\n    if (value.trim() && !disabled) {\r\n      onTyping();\r\n    }\r\n  };\r\n\r\n  // Handle key press\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-input-container\">\r\n      <form onSubmit={handleSubmit} className=\"message-input-form\">\r\n        <div className=\"input-wrapper\">\r\n          <input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            value={message}\r\n            onChange={handleInputChange}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder={disabled ? \"Connecting...\" : \"Type your message...\"}\r\n            disabled={disabled || isSending}\r\n            className={`message-input ${disabled ? 'disabled' : ''}`}\r\n            maxLength={500}\r\n            autoComplete=\"off\"\r\n          />\r\n          {message.length > 400 && (\r\n            <div className=\"character-count\">\r\n              {message.length}/500\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <button\r\n          type=\"submit\"\r\n          disabled={!message.trim() || disabled || isSending}\r\n          className={`send-button ${(!message.trim() || disabled || isSending) ? 'disabled' : ''}`}\r\n          title=\"Send message (Enter)\"\r\n        >\r\n          {isSending ? (\r\n            <div className=\"spinner\">⟳</div>\r\n          ) : (\r\n            <span>➤</span>\r\n          )}\r\n        </button>\r\n      </form>\r\n      \r\n      {message.length > 450 && (\r\n        <div className=\"input-warning\">\r\n          Message is getting long. Consider breaking it into multiple messages.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageInput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,YAAY,GAAGA,CAAC;EAAEC,aAAa;EAAEC,QAAQ;EAAEC,QAAQ,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMc,QAAQ,GAAGb,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACAC,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,CAACC,OAAO,IAAI,CAACP,QAAQ,EAAE;MACjCM,QAAQ,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACT,OAAO,CAACU,IAAI,CAAC,CAAC,IAAIZ,QAAQ,IAAII,SAAS,EAAE;MAC5C;IACF;IAEAC,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAMP,aAAa,CAACI,OAAO,CAACU,IAAI,CAAC,CAAC,CAAC;MACnCT,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;;MAEhB;MACA,IAAIG,QAAQ,CAACC,OAAO,EAAE;QACpBD,QAAQ,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,SAAS;MACRR,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMU,iBAAiB,GAAIL,CAAC,IAAK;IAC/B,MAAMM,KAAK,GAAGN,CAAC,CAACO,MAAM,CAACD,KAAK;IAC5Bb,UAAU,CAACa,KAAK,CAAC;;IAEjB;IACA,IAAIA,KAAK,CAACJ,IAAI,CAAC,CAAC,IAAI,CAACZ,QAAQ,EAAE;MAC7BD,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC;;EAED;EACA,MAAMmB,cAAc,GAAIR,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACS,GAAG,KAAK,OAAO,IAAI,CAACT,CAAC,CAACU,QAAQ,EAAE;MACpCV,CAAC,CAACC,cAAc,CAAC,CAAC;MAClBF,YAAY,CAACC,CAAC,CAAC;IACjB;EACF,CAAC;EAED,oBACEd,OAAA;IAAKyB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtC1B,OAAA;MAAM2B,QAAQ,EAAEd,YAAa;MAACY,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC1D1B,OAAA;QAAKyB,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B1B,OAAA;UACE4B,GAAG,EAAElB,QAAS;UACdmB,IAAI,EAAC,MAAM;UACXT,KAAK,EAAEd,OAAQ;UACfwB,QAAQ,EAAEX,iBAAkB;UAC5BY,UAAU,EAAET,cAAe;UAC3BU,WAAW,EAAE5B,QAAQ,GAAG,eAAe,GAAG,sBAAuB;UACjEA,QAAQ,EAAEA,QAAQ,IAAII,SAAU;UAChCiB,SAAS,EAAE,iBAAiBrB,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAG;UACzD6B,SAAS,EAAE,GAAI;UACfC,YAAY,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,EACDhC,OAAO,CAACiC,MAAM,GAAG,GAAG,iBACnBvC,OAAA;UAAKyB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,GAC7BpB,OAAO,CAACiC,MAAM,EAAC,MAClB;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENtC,OAAA;QACE6B,IAAI,EAAC,QAAQ;QACbzB,QAAQ,EAAE,CAACE,OAAO,CAACU,IAAI,CAAC,CAAC,IAAIZ,QAAQ,IAAII,SAAU;QACnDiB,SAAS,EAAE,eAAgB,CAACnB,OAAO,CAACU,IAAI,CAAC,CAAC,IAAIZ,QAAQ,IAAII,SAAS,GAAI,UAAU,GAAG,EAAE,EAAG;QACzFgC,KAAK,EAAC,sBAAsB;QAAAd,QAAA,EAE3BlB,SAAS,gBACRR,OAAA;UAAKyB,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,gBAEhCtC,OAAA;UAAA0B,QAAA,EAAM;QAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MACd;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAENhC,OAAO,CAACiC,MAAM,GAAG,GAAG,iBACnBvC,OAAA;MAAKyB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAE/B;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CApGIJ,YAAY;AAAAwC,EAAA,GAAZxC,YAAY;AAsGlB,eAAeA,YAAY;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}