{"ast":null,"code":"import io from 'socket.io-client';\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000';\nclass SocketService {\n  constructor() {\n    this.socket = null;\n  }\n  connect() {\n    this.socket = io(SOCKET_URL);\n    return this.socket;\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n\n  // Join a room\n  joinRoom(userData) {\n    if (this.socket) {\n      this.socket.emit('join', userData);\n    }\n  }\n\n  // Send message\n  sendMessage(message) {\n    if (this.socket) {\n      this.socket.emit('sendMessage', {\n        message\n      });\n    }\n  }\n\n  // Typing indicator\n  setTyping(isTyping) {\n    if (this.socket) {\n      this.socket.emit('typing', {\n        isTyping\n      });\n    }\n  }\n\n  // Event listeners\n  onMessage(callback) {\n    if (this.socket) {\n      this.socket.on('message', callback);\n    }\n  }\n  onMessageHistory(callback) {\n    if (this.socket) {\n      this.socket.on('messageHistory', callback);\n    }\n  }\n  onUserList(callback) {\n    if (this.socket) {\n      this.socket.on('userList', callback);\n    }\n  }\n  onUserTyping(callback) {\n    if (this.socket) {\n      this.socket.on('userTyping', callback);\n    }\n  }\n\n  // Remove listeners\n  removeListener(eventName) {\n    if (this.socket) {\n      this.socket.off(eventName);\n    }\n  }\n}\nconst socketServiceInstance = new SocketService();\nexport default socketServiceInstance;","map":{"version":3,"names":["io","SOCKET_URL","process","env","REACT_APP_SOCKET_URL","SocketService","constructor","socket","connect","disconnect","joinRoom","userData","emit","sendMessage","message","setTyping","isTyping","onMessage","callback","on","onMessageHistory","onUserList","onUserTyping","removeListener","eventName","off","socketServiceInstance"],"sources":["C:/Users/SANAL/chat-app/frontend/src/services/socket.js"],"sourcesContent":["import io from 'socket.io-client';\r\n\r\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000';\r\n\r\nclass SocketService {\r\n  constructor() {\r\n    this.socket = null;\r\n  }\r\n\r\n  connect() {\r\n    this.socket = io(SOCKET_URL);\r\n    return this.socket;\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = null;\r\n    }\r\n  }\r\n\r\n  // Join a room\r\n  joinRoom(userData) {\r\n    if (this.socket) {\r\n      this.socket.emit('join', userData);\r\n    }\r\n  }\r\n\r\n  // Send message\r\n  sendMessage(message) {\r\n    if (this.socket) {\r\n      this.socket.emit('sendMessage', { message });\r\n    }\r\n  }\r\n\r\n  // Typing indicator\r\n  setTyping(isTyping) {\r\n    if (this.socket) {\r\n      this.socket.emit('typing', { isTyping });\r\n    }\r\n  }\r\n\r\n  // Event listeners\r\n  onMessage(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('message', callback);\r\n    }\r\n  }\r\n\r\n  onMessageHistory(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('messageHistory', callback);\r\n    }\r\n  }\r\n\r\n  onUserList(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('userList', callback);\r\n    }\r\n  }\r\n\r\n  onUserTyping(callback) {\r\n    if (this.socket) {\r\n      this.socket.on('userTyping', callback);\r\n    }\r\n  }\r\n\r\n  // Remove listeners\r\n  removeListener(eventName) {\r\n    if (this.socket) {\r\n      this.socket.off(eventName);\r\n    }\r\n  }\r\n}\r\n\r\nconst socketServiceInstance = new SocketService();\r\nexport default socketServiceInstance;"],"mappings":"AAAA,OAAOA,EAAE,MAAM,kBAAkB;AAEjC,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,uBAAuB;AAE9E,MAAMC,aAAa,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAG,IAAI;EACpB;EAEAC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACD,MAAM,GAAGP,EAAE,CAACC,UAAU,CAAC;IAC5B,OAAO,IAAI,CAACM,MAAM;EACpB;EAEAE,UAAUA,CAAA,EAAG;IACX,IAAI,IAAI,CAACF,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACE,UAAU,CAAC,CAAC;MACxB,IAAI,CAACF,MAAM,GAAG,IAAI;IACpB;EACF;;EAEA;EACAG,QAAQA,CAACC,QAAQ,EAAE;IACjB,IAAI,IAAI,CAACJ,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACK,IAAI,CAAC,MAAM,EAAED,QAAQ,CAAC;IACpC;EACF;;EAEA;EACAE,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,IAAI,CAACP,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACK,IAAI,CAAC,aAAa,EAAE;QAAEE;MAAQ,CAAC,CAAC;IAC9C;EACF;;EAEA;EACAC,SAASA,CAACC,QAAQ,EAAE;IAClB,IAAI,IAAI,CAACT,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACK,IAAI,CAAC,QAAQ,EAAE;QAAEI;MAAS,CAAC,CAAC;IAC1C;EACF;;EAEA;EACAC,SAASA,CAACC,QAAQ,EAAE;IAClB,IAAI,IAAI,CAACX,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACY,EAAE,CAAC,SAAS,EAAED,QAAQ,CAAC;IACrC;EACF;EAEAE,gBAAgBA,CAACF,QAAQ,EAAE;IACzB,IAAI,IAAI,CAACX,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACY,EAAE,CAAC,gBAAgB,EAAED,QAAQ,CAAC;IAC5C;EACF;EAEAG,UAAUA,CAACH,QAAQ,EAAE;IACnB,IAAI,IAAI,CAACX,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACY,EAAE,CAAC,UAAU,EAAED,QAAQ,CAAC;IACtC;EACF;EAEAI,YAAYA,CAACJ,QAAQ,EAAE;IACrB,IAAI,IAAI,CAACX,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACY,EAAE,CAAC,YAAY,EAAED,QAAQ,CAAC;IACxC;EACF;;EAEA;EACAK,cAAcA,CAACC,SAAS,EAAE;IACxB,IAAI,IAAI,CAACjB,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACkB,GAAG,CAACD,SAAS,CAAC;IAC5B;EACF;AACF;AAEA,MAAME,qBAAqB,GAAG,IAAIrB,aAAa,CAAC,CAAC;AACjD,eAAeqB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}