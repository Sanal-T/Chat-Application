{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANAL\\\\chat-app\\\\frontend\\\\src\\\\components\\\\UserList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = ({\n  users,\n  currentUser\n}) => {\n  _s();\n  // Helper function to get user avatar initials\n  const getAvatarText = username => {\n    if (!username || typeof username !== 'string') return '?';\n\n    // Handle usernames of any length\n    const cleanName = username.trim();\n    if (cleanName.length === 0) return '?';\n\n    // For single character usernames\n    if (cleanName.length === 1) {\n      return cleanName.toUpperCase();\n    }\n\n    // For multi-character usernames\n    const words = cleanName.split(/\\s+/);\n    if (words.length >= 2) {\n      // If multiple words, use first letter of first two words\n      return (words[0][0] + words[1][0]).toUpperCase();\n    } else {\n      // If single word with multiple characters, use first two characters\n      return cleanName.substring(0, 2).toUpperCase();\n    }\n  };\n\n  // Helper function to format username for display\n  const formatUsername = username => {\n    if (!username || typeof username !== 'string') return 'Unknown User';\n    const cleanName = username.trim();\n    if (cleanName.length === 0) return 'Unknown User';\n\n    // Capitalize first letter of each word\n    return cleanName.split(/\\s+/).map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\n  };\n\n  // Helper function to get user status\n  const getUserStatus = user => {\n    if (!user) return 'offline';\n\n    // Check various possible status fields\n    if (user.status) return user.status;\n    if (user.isOnline !== undefined) return user.isOnline ? 'online' : 'offline';\n    if (user.connected !== undefined) return user.connected ? 'online' : 'offline';\n    if (user.active !== undefined) return user.active ? 'online' : 'away';\n    return 'online'; // Default to online if no status info\n  };\n\n  // Helper function to get status display text\n  const getStatusText = status => {\n    switch (status) {\n      case 'online':\n        return 'Online';\n      case 'away':\n        return 'Away';\n      case 'busy':\n        return 'Busy';\n      case 'offline':\n        return 'Offline';\n      default:\n        return 'Online';\n    }\n  };\n\n  // Filter and sort users\n  const processedUsers = React.useMemo(() => {\n    if (!Array.isArray(users)) return [];\n    return users.filter(user => user && (user.username || user.name || user.id)).map(user => ({\n      ...user,\n      displayName: user.username || user.name || user.id || 'Unknown',\n      status: getUserStatus(user),\n      isCurrentUser: user.id === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) || user.username === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.username)\n    })).sort((a, b) => {\n      // Sort current user first, then by status, then alphabetically\n      if (a.isCurrentUser) return -1;\n      if (b.isCurrentUser) return 1;\n      const statusOrder = {\n        'online': 0,\n        'away': 1,\n        'busy': 2,\n        'offline': 3\n      };\n      const statusDiff = (statusOrder[a.status] || 3) - (statusOrder[b.status] || 3);\n      if (statusDiff !== 0) return statusDiff;\n      return a.displayName.localeCompare(b.displayName);\n    });\n  }, [users, currentUser]);\n  if (!processedUsers.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No users online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list\",\n    children: processedUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `user-item ${user.isCurrentUser ? 'current-user' : ''}`,\n      title: `${formatUsername(user.displayName)} - ${getStatusText(user.status)}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-avatar\",\n        children: getAvatarText(user.displayName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-name\",\n          children: [formatUsername(user.displayName), user.isCurrentUser && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"you-indicator\",\n            children: \" (You)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-indicator status-${user.status}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-text\",\n            children: getStatusText(user.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), user.isCurrentUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-user-badge\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"16\",\n          height: \"16\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M20 6L9 17l-5-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, user.id || user.username || Math.random(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"OtjKnDghRF8e0K7zQ0RA79n52aE=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UserList","users","currentUser","_s","getAvatarText","username","cleanName","trim","length","toUpperCase","words","split","substring","formatUsername","map","word","charAt","slice","toLowerCase","join","getUserStatus","user","status","isOnline","undefined","connected","active","getStatusText","processedUsers","useMemo","Array","isArray","filter","name","id","displayName","isCurrentUser","sort","a","b","statusOrder","statusDiff","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","width","height","viewBox","fill","stroke","strokeWidth","d","Math","random","_c","$RefreshReg$"],"sources":["C:/Users/SANAL/chat-app/frontend/src/components/UserList.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst UserList = ({ users, currentUser }) => {\r\n  // Helper function to get user avatar initials\r\n  const getAvatarText = (username) => {\r\n    if (!username || typeof username !== 'string') return '?';\r\n    \r\n    // Handle usernames of any length\r\n    const cleanName = username.trim();\r\n    if (cleanName.length === 0) return '?';\r\n    \r\n    // For single character usernames\r\n    if (cleanName.length === 1) {\r\n      return cleanName.toUpperCase();\r\n    }\r\n    \r\n    // For multi-character usernames\r\n    const words = cleanName.split(/\\s+/);\r\n    if (words.length >= 2) {\r\n      // If multiple words, use first letter of first two words\r\n      return (words[0][0] + words[1][0]).toUpperCase();\r\n    } else {\r\n      // If single word with multiple characters, use first two characters\r\n      return cleanName.substring(0, 2).toUpperCase();\r\n    }\r\n  };\r\n\r\n  // Helper function to format username for display\r\n  const formatUsername = (username) => {\r\n    if (!username || typeof username !== 'string') return 'Unknown User';\r\n    \r\n    const cleanName = username.trim();\r\n    if (cleanName.length === 0) return 'Unknown User';\r\n    \r\n    // Capitalize first letter of each word\r\n    return cleanName\r\n      .split(/\\s+/)\r\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\r\n      .join(' ');\r\n  };\r\n\r\n  // Helper function to get user status\r\n  const getUserStatus = (user) => {\r\n    if (!user) return 'offline';\r\n    \r\n    // Check various possible status fields\r\n    if (user.status) return user.status;\r\n    if (user.isOnline !== undefined) return user.isOnline ? 'online' : 'offline';\r\n    if (user.connected !== undefined) return user.connected ? 'online' : 'offline';\r\n    if (user.active !== undefined) return user.active ? 'online' : 'away';\r\n    \r\n    return 'online'; // Default to online if no status info\r\n  };\r\n\r\n  // Helper function to get status display text\r\n  const getStatusText = (status) => {\r\n    switch (status) {\r\n      case 'online':\r\n        return 'Online';\r\n      case 'away':\r\n        return 'Away';\r\n      case 'busy':\r\n        return 'Busy';\r\n      case 'offline':\r\n        return 'Offline';\r\n      default:\r\n        return 'Online';\r\n    }\r\n  };\r\n\r\n  // Filter and sort users\r\n  const processedUsers = React.useMemo(() => {\r\n    if (!Array.isArray(users)) return [];\r\n    \r\n    return users\r\n      .filter(user => user && (user.username || user.name || user.id))\r\n      .map(user => ({\r\n        ...user,\r\n        displayName: user.username || user.name || user.id || 'Unknown',\r\n        status: getUserStatus(user),\r\n        isCurrentUser: user.id === currentUser?.id || user.username === currentUser?.username\r\n      }))\r\n      .sort((a, b) => {\r\n        // Sort current user first, then by status, then alphabetically\r\n        if (a.isCurrentUser) return -1;\r\n        if (b.isCurrentUser) return 1;\r\n        \r\n        const statusOrder = { 'online': 0, 'away': 1, 'busy': 2, 'offline': 3 };\r\n        const statusDiff = (statusOrder[a.status] || 3) - (statusOrder[b.status] || 3);\r\n        if (statusDiff !== 0) return statusDiff;\r\n        \r\n        return a.displayName.localeCompare(b.displayName);\r\n      });\r\n  }, [users, currentUser]);\r\n\r\n  if (!processedUsers.length) {\r\n    return (\r\n      <div className=\"user-list\">\r\n        <div className=\"empty-state\">\r\n          <p>No users online</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-list\">\r\n      {processedUsers.map((user) => (\r\n        <div \r\n          key={user.id || user.username || Math.random()}\r\n          className={`user-item ${user.isCurrentUser ? 'current-user' : ''}`}\r\n          title={`${formatUsername(user.displayName)} - ${getStatusText(user.status)}`}\r\n        >\r\n          <div className=\"user-avatar\">\r\n            {getAvatarText(user.displayName)}\r\n          </div>\r\n          \r\n          <div className=\"user-info\">\r\n            <div className=\"user-name\">\r\n              {formatUsername(user.displayName)}\r\n              {user.isCurrentUser && <span className=\"you-indicator\"> (You)</span>}\r\n            </div>\r\n            \r\n            <div className=\"user-status\">\r\n              <span className={`status-indicator status-${user.status}`}></span>\r\n              <span className=\"status-text\">{getStatusText(user.status)}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          {user.isCurrentUser && (\r\n            <div className=\"current-user-badge\">\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                <path d=\"M20 6L9 17l-5-5\"/>\r\n              </svg>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}